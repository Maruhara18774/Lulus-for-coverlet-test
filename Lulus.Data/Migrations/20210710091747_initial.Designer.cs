// <auto-generated />
using System;
using Lulus.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lulus.Data.Migrations
{
    [DbContext(typeof(LulusDBContext))]
    [Migration("20210710091747_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lulus.Data.Entities.Category", b =>
                {
                    b.Property<int>("Category_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Category_ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Country", b =>
                {
                    b.Property<int>("Country_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Country_ID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Feedback", b =>
                {
                    b.Property<int>("Feedback_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback_Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Feedback_Rating")
                        .HasColumnType("int");

                    b.Property<string>("Feedback_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_ID")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Feedback_ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Lulus.Data.Entities.LineQuantity", b =>
                {
                    b.Property<int>("LineQuantity_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductLine_ID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Size_ID")
                        .HasColumnType("int");

                    b.HasKey("LineQuantity_ID");

                    b.HasIndex("ProductLine_ID");

                    b.HasIndex("Size_ID");

                    b.ToTable("LineQuantities");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Order", b =>
                {
                    b.Property<int>("Order_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Order_Total")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Order_ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Lulus.Data.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetail_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderDetail_Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<double>("OrderDetail_Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("Order_ID")
                        .HasColumnType("int");

                    b.Property<int>("ProductLine_ID")
                        .HasColumnType("int");

                    b.HasKey("OrderDetail_ID");

                    b.HasIndex("Order_ID");

                    b.HasIndex("ProductLine_ID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Product", b =>
                {
                    b.Property<int>("Product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Product_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Product_Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Product_SalePrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SubCategory_ID")
                        .HasColumnType("int");

                    b.HasKey("Product_ID");

                    b.HasIndex("SubCategory_ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Lulus.Data.Entities.ProductImage", b =>
                {
                    b.Property<int>("ProductImage_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductImage_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductLine_ID")
                        .HasColumnType("int");

                    b.HasKey("ProductImage_ID");

                    b.HasIndex("ProductLine_ID");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Lulus.Data.Entities.ProductLine", b =>
                {
                    b.Property<int>("ProductLine_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ProductLine_CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProductLine_UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Product_ID")
                        .HasColumnType("int");

                    b.Property<string>("Texture_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Texture_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductLine_ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("ProductLines");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Size", b =>
                {
                    b.Property<int>("Size_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Size_Key")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Size_ID");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("Lulus.Data.Entities.SubCategory", b =>
                {
                    b.Property<int>("SubCategory_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("SubCategory_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCategory_ID");

                    b.HasIndex("Category_ID");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Feedback", b =>
                {
                    b.HasOne("Lulus.Data.Entities.Product", "Product")
                        .WithMany("Feedbacks")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Lulus.Data.Entities.LineQuantity", b =>
                {
                    b.HasOne("Lulus.Data.Entities.ProductLine", "ProductLine")
                        .WithMany("LineQuantities")
                        .HasForeignKey("ProductLine_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lulus.Data.Entities.Size", "Size")
                        .WithMany("LineQuantities")
                        .HasForeignKey("Size_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductLine");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Lulus.Data.Entities.OrderDetail", b =>
                {
                    b.HasOne("Lulus.Data.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("Order_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lulus.Data.Entities.ProductLine", "ProductLine")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductLine_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProductLine");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Product", b =>
                {
                    b.HasOne("Lulus.Data.Entities.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategory_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Lulus.Data.Entities.ProductImage", b =>
                {
                    b.HasOne("Lulus.Data.Entities.ProductLine", "ProductLine")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductLine_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductLine");
                });

            modelBuilder.Entity("Lulus.Data.Entities.ProductLine", b =>
                {
                    b.HasOne("Lulus.Data.Entities.Product", "Product")
                        .WithMany("ProductLines")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Lulus.Data.Entities.SubCategory", b =>
                {
                    b.HasOne("Lulus.Data.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Product", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("ProductLines");
                });

            modelBuilder.Entity("Lulus.Data.Entities.ProductLine", b =>
                {
                    b.Navigation("LineQuantities");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Size", b =>
                {
                    b.Navigation("LineQuantities");
                });

            modelBuilder.Entity("Lulus.Data.Entities.SubCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
