// <auto-generated />
using System;
using Lulus.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lulus.Data.Migrations
{
    [DbContext(typeof(LulusDBContext))]
    [Migration("20211006095902_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lulus.Data.Entities.Category", b =>
                {
                    b.Property<int>("Category_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Category_ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Category_ID = 1,
                            Category_Name = "Dresses"
                        },
                        new
                        {
                            Category_ID = 2,
                            Category_Name = "Tops"
                        },
                        new
                        {
                            Category_ID = 3,
                            Category_Name = "Bottoms"
                        },
                        new
                        {
                            Category_ID = 4,
                            Category_Name = "Activewear"
                        },
                        new
                        {
                            Category_ID = 5,
                            Category_Name = "Swimwear"
                        },
                        new
                        {
                            Category_ID = 6,
                            Category_Name = "Outerwear"
                        },
                        new
                        {
                            Category_ID = 7,
                            Category_Name = "Rompers and Jumpsuits"
                        },
                        new
                        {
                            Category_ID = 8,
                            Category_Name = "Denims"
                        },
                        new
                        {
                            Category_ID = 9,
                            Category_Name = "Loungewears"
                        });
                });

            modelBuilder.Entity("Lulus.Data.Entities.Country", b =>
                {
                    b.Property<int>("Country_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Country_ID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Country_ID = 1,
                            Country_Name = "Vietnam"
                        },
                        new
                        {
                            Country_ID = 2,
                            Country_Name = "American"
                        },
                        new
                        {
                            Country_ID = 3,
                            Country_Name = "England"
                        },
                        new
                        {
                            Country_ID = 4,
                            Country_Name = "France"
                        });
                });

            modelBuilder.Entity("Lulus.Data.Entities.Feedback", b =>
                {
                    b.Property<int>("Feedback_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback_Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Feedback_Rating")
                        .HasColumnType("int");

                    b.Property<string>("Feedback_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Product_ID")
                        .HasColumnType("int");

                    b.Property<Guid>("User_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Feedback_ID");

                    b.HasIndex("Product_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Lulus.Data.Entities.LineQuantity", b =>
                {
                    b.Property<int>("LineQuantity_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductLine_ID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Size_ID")
                        .HasColumnType("int");

                    b.HasKey("LineQuantity_ID");

                    b.HasIndex("ProductLine_ID");

                    b.HasIndex("Size_ID");

                    b.ToTable("LineQuantities");

                    b.HasData(
                        new
                        {
                            LineQuantity_ID = 1,
                            ProductLine_ID = 1,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 2,
                            ProductLine_ID = 1,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 3,
                            ProductLine_ID = 1,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 4,
                            ProductLine_ID = 1,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 5,
                            ProductLine_ID = 1,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 6,
                            ProductLine_ID = 1,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 7,
                            ProductLine_ID = 2,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 8,
                            ProductLine_ID = 2,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 9,
                            ProductLine_ID = 2,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 10,
                            ProductLine_ID = 2,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 11,
                            ProductLine_ID = 2,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 13,
                            ProductLine_ID = 2,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 14,
                            ProductLine_ID = 3,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 15,
                            ProductLine_ID = 3,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 16,
                            ProductLine_ID = 3,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 17,
                            ProductLine_ID = 3,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 18,
                            ProductLine_ID = 3,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 19,
                            ProductLine_ID = 3,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 20,
                            ProductLine_ID = 4,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 21,
                            ProductLine_ID = 4,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 22,
                            ProductLine_ID = 4,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 23,
                            ProductLine_ID = 4,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 24,
                            ProductLine_ID = 4,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 25,
                            ProductLine_ID = 4,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 26,
                            ProductLine_ID = 5,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 27,
                            ProductLine_ID = 5,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 28,
                            ProductLine_ID = 5,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 29,
                            ProductLine_ID = 5,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 30,
                            ProductLine_ID = 5,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 31,
                            ProductLine_ID = 5,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 32,
                            ProductLine_ID = 6,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 33,
                            ProductLine_ID = 6,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 34,
                            ProductLine_ID = 6,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 35,
                            ProductLine_ID = 6,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 36,
                            ProductLine_ID = 6,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 37,
                            ProductLine_ID = 6,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 38,
                            ProductLine_ID = 7,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 39,
                            ProductLine_ID = 7,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 40,
                            ProductLine_ID = 7,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 41,
                            ProductLine_ID = 7,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 42,
                            ProductLine_ID = 7,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 43,
                            ProductLine_ID = 7,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 44,
                            ProductLine_ID = 8,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 45,
                            ProductLine_ID = 8,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 46,
                            ProductLine_ID = 8,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 47,
                            ProductLine_ID = 8,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 48,
                            ProductLine_ID = 8,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 49,
                            ProductLine_ID = 8,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 50,
                            ProductLine_ID = 9,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 51,
                            ProductLine_ID = 9,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 52,
                            ProductLine_ID = 9,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 53,
                            ProductLine_ID = 9,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 54,
                            ProductLine_ID = 9,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 55,
                            ProductLine_ID = 9,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 56,
                            ProductLine_ID = 10,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 57,
                            ProductLine_ID = 10,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 58,
                            ProductLine_ID = 10,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 59,
                            ProductLine_ID = 10,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 60,
                            ProductLine_ID = 10,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 61,
                            ProductLine_ID = 10,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 62,
                            ProductLine_ID = 11,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 63,
                            ProductLine_ID = 11,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 64,
                            ProductLine_ID = 11,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 65,
                            ProductLine_ID = 11,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 66,
                            ProductLine_ID = 11,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 67,
                            ProductLine_ID = 11,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 68,
                            ProductLine_ID = 12,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 69,
                            ProductLine_ID = 12,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 70,
                            ProductLine_ID = 12,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 71,
                            ProductLine_ID = 12,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 72,
                            ProductLine_ID = 12,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 73,
                            ProductLine_ID = 12,
                            Quantity = 50,
                            Size_ID = 6
                        },
                        new
                        {
                            LineQuantity_ID = 74,
                            ProductLine_ID = 13,
                            Quantity = 50,
                            Size_ID = 1
                        },
                        new
                        {
                            LineQuantity_ID = 75,
                            ProductLine_ID = 13,
                            Quantity = 50,
                            Size_ID = 2
                        },
                        new
                        {
                            LineQuantity_ID = 76,
                            ProductLine_ID = 13,
                            Quantity = 50,
                            Size_ID = 3
                        },
                        new
                        {
                            LineQuantity_ID = 77,
                            ProductLine_ID = 13,
                            Quantity = 50,
                            Size_ID = 4
                        },
                        new
                        {
                            LineQuantity_ID = 78,
                            ProductLine_ID = 13,
                            Quantity = 50,
                            Size_ID = 5
                        },
                        new
                        {
                            LineQuantity_ID = 79,
                            ProductLine_ID = 13,
                            Quantity = 50,
                            Size_ID = 6
                        });
                });

            modelBuilder.Entity("Lulus.Data.Entities.Order", b =>
                {
                    b.Property<int>("Order_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Order_Total")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("User_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Order_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Lulus.Data.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetail_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderDetail_Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<double>("OrderDetail_Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("Order_ID")
                        .HasColumnType("int");

                    b.Property<int>("ProductLine_ID")
                        .HasColumnType("int");

                    b.HasKey("OrderDetail_ID");

                    b.HasIndex("Order_ID");

                    b.HasIndex("ProductLine_ID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Product", b =>
                {
                    b.Property<int>("Product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Product_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Product_Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Product_SalePrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("SubCategory_ID")
                        .HasColumnType("int");

                    b.HasKey("Product_ID");

                    b.HasIndex("SubCategory_ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Product_ID = 1,
                            Product_Description = "Take a moment to marvel at the sheer beauty of the Lulus Wondrous Water Lilies Royal Blue Maxi Dress! Royal blue chiffon shapes a surplice bodice framed by sheer long sleeves. A billowing maxi skirt with front slit falls below the elasticized waist for a stunning finish.",
                            Product_Name = "Wondrous Water Lilies Royal Blue Maxi Dress",
                            Product_Price = 68.0,
                            Product_SalePrice = 68.0,
                            Status = 0,
                            SubCategory_ID = 1
                        },
                        new
                        {
                            Product_ID = 2,
                            Product_Description = "Lulus Exclusive! The Lulus Thoughts of Hue Black Surplice Maxi Dress will have you dreaming of romantic evenings under starlit skies! Lightweight woven Georgette fabric drapes into a sleeveless, surplice bodice and V-back, atop a banded waistline. Cascading skirt falls to a maxi hem with a sultry side slit. Hidden back zipper with clasp.",
                            Product_Name = "Thoughts of Hue Black Surplice Maxi Dress",
                            Product_Price = 88.0,
                            Product_SalePrice = 80.0,
                            Status = 0,
                            SubCategory_ID = 1
                        },
                        new
                        {
                            Product_ID = 3,
                            Product_Description = "Lulus Exclusive! The Lulus Thoughts of Hue Black Surplice Maxi Dress will have you dreaming of romantic evenings under starlit skies! Lightweight woven Georgette fabric drapes into a sleeveless, surplice bodice and V-back, atop a banded waistline. Cascading skirt falls to a maxi hem with a sultry side slit. Hidden back zipper with clasp.",
                            Product_Name = "Thoughts of Hue Black Surplice Maxi Dress",
                            Product_Price = 88.0,
                            Product_SalePrice = 80.0,
                            Status = 0,
                            SubCategory_ID = 2
                        },
                        new
                        {
                            Product_ID = 4,
                            Product_Description = "Lulus Exclusive! The Lulus Thoughts of Hue Black Surplice Maxi Dress will have you dreaming of romantic evenings under starlit skies! Lightweight woven Georgette fabric drapes into a sleeveless, surplice bodice and V-back, atop a banded waistline. Cascading skirt falls to a maxi hem with a sultry side slit. Hidden back zipper with clasp.",
                            Product_Name = "Thoughts of Hue Black Surplice Maxi Dress",
                            Product_Price = 88.0,
                            Product_SalePrice = 80.0,
                            Status = 0,
                            SubCategory_ID = 3
                        },
                        new
                        {
                            Product_ID = 5,
                            Product_Description = "Lulus Exclusive! The Lulus Thoughts of Hue Black Surplice Maxi Dress will have you dreaming of romantic evenings under starlit skies! Lightweight woven Georgette fabric drapes into a sleeveless, surplice bodice and V-back, atop a banded waistline. Cascading skirt falls to a maxi hem with a sultry side slit. Hidden back zipper with clasp.",
                            Product_Name = "Thoughts of Hue Black Surplice Maxi Dress",
                            Product_Price = 88.0,
                            Product_SalePrice = 80.0,
                            Status = 0,
                            SubCategory_ID = 4
                        },
                        new
                        {
                            Product_ID = 6,
                            Product_Description = "Lulus Exclusive! The Lulus Thoughts of Hue Black Surplice Maxi Dress will have you dreaming of romantic evenings under starlit skies! Lightweight woven Georgette fabric drapes into a sleeveless, surplice bodice and V-back, atop a banded waistline. Cascading skirt falls to a maxi hem with a sultry side slit. Hidden back zipper with clasp.",
                            Product_Name = "Thoughts of Hue Black Surplice Maxi Dress",
                            Product_Price = 88.0,
                            Product_SalePrice = 80.0,
                            Status = 0,
                            SubCategory_ID = 5
                        });
                });

            modelBuilder.Entity("Lulus.Data.Entities.ProductImage", b =>
                {
                    b.Property<int>("ProductImage_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductImage_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductLine_ID")
                        .HasColumnType("int");

                    b.HasKey("ProductImage_ID");

                    b.HasIndex("ProductLine_ID");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            ProductImage_ID = 1,
                            ProductImage_Image = "/Images/Product/1-0.jpg",
                            ProductLine_ID = 1
                        },
                        new
                        {
                            ProductImage_ID = 2,
                            ProductImage_Image = "/Images/Product/1-1.jpg",
                            ProductLine_ID = 1
                        },
                        new
                        {
                            ProductImage_ID = 3,
                            ProductImage_Image = "/Images/Product/1-2.jpg",
                            ProductLine_ID = 1
                        },
                        new
                        {
                            ProductImage_ID = 4,
                            ProductImage_Image = "/Images/Product/1-3.jpg",
                            ProductLine_ID = 1
                        },
                        new
                        {
                            ProductImage_ID = 5,
                            ProductImage_Image = "/Images/Product/1-4.jpg",
                            ProductLine_ID = 1
                        },
                        new
                        {
                            ProductImage_ID = 6,
                            ProductImage_Image = "/Images/Product/2-0.png",
                            ProductLine_ID = 2
                        },
                        new
                        {
                            ProductImage_ID = 7,
                            ProductImage_Image = "/Images/Product/2-1.png",
                            ProductLine_ID = 2
                        },
                        new
                        {
                            ProductImage_ID = 8,
                            ProductImage_Image = "/Images/Product/2-2.png",
                            ProductLine_ID = 2
                        },
                        new
                        {
                            ProductImage_ID = 9,
                            ProductImage_Image = "/Images/Product/2-3.png",
                            ProductLine_ID = 2
                        },
                        new
                        {
                            ProductImage_ID = 10,
                            ProductImage_Image = "/Images/Product/2-4.png",
                            ProductLine_ID = 2
                        },
                        new
                        {
                            ProductImage_ID = 11,
                            ProductImage_Image = "/Images/Product/3-0.png",
                            ProductLine_ID = 3
                        },
                        new
                        {
                            ProductImage_ID = 12,
                            ProductImage_Image = "/Images/Product/3-1.png",
                            ProductLine_ID = 3
                        },
                        new
                        {
                            ProductImage_ID = 13,
                            ProductImage_Image = "/Images/Product/3-2.png",
                            ProductLine_ID = 3
                        },
                        new
                        {
                            ProductImage_ID = 14,
                            ProductImage_Image = "/Images/Product/3-3.png",
                            ProductLine_ID = 3
                        },
                        new
                        {
                            ProductImage_ID = 15,
                            ProductImage_Image = "/Images/Product/3-4.png",
                            ProductLine_ID = 3
                        },
                        new
                        {
                            ProductImage_ID = 16,
                            ProductImage_Image = "/Images/Product/3-5.jpg",
                            ProductLine_ID = 3
                        },
                        new
                        {
                            ProductImage_ID = 17,
                            ProductImage_Image = "/Images/Product/3-6.jpg",
                            ProductLine_ID = 3
                        },
                        new
                        {
                            ProductImage_ID = 18,
                            ProductImage_Image = "/Images/Product/3-7.jpg",
                            ProductLine_ID = 3
                        },
                        new
                        {
                            ProductImage_ID = 19,
                            ProductImage_Image = "/Images/Product/3-8.jpg",
                            ProductLine_ID = 3
                        },
                        new
                        {
                            ProductImage_ID = 20,
                            ProductImage_Image = "/Images/Product/4-0.jpg",
                            ProductLine_ID = 4
                        },
                        new
                        {
                            ProductImage_ID = 21,
                            ProductImage_Image = "/Images/Product/4-1.jpg",
                            ProductLine_ID = 4
                        },
                        new
                        {
                            ProductImage_ID = 22,
                            ProductImage_Image = "/Images/Product/4-2.jpg",
                            ProductLine_ID = 4
                        },
                        new
                        {
                            ProductImage_ID = 23,
                            ProductImage_Image = "/Images/Product/4-3.jpg",
                            ProductLine_ID = 4
                        },
                        new
                        {
                            ProductImage_ID = 24,
                            ProductImage_Image = "/Images/Product/4-4.jpg",
                            ProductLine_ID = 4
                        },
                        new
                        {
                            ProductImage_ID = 25,
                            ProductImage_Image = "/Images/Product/4-5.png",
                            ProductLine_ID = 4
                        },
                        new
                        {
                            ProductImage_ID = 26,
                            ProductImage_Image = "/Images/Product/5-1.jpg",
                            ProductLine_ID = 5
                        },
                        new
                        {
                            ProductImage_ID = 27,
                            ProductImage_Image = "/Images/Product/5-2.jpg",
                            ProductLine_ID = 5
                        },
                        new
                        {
                            ProductImage_ID = 28,
                            ProductImage_Image = "/Images/Product/5-3.jpg",
                            ProductLine_ID = 5
                        },
                        new
                        {
                            ProductImage_ID = 29,
                            ProductImage_Image = "/Images/Product/5-4.jpg",
                            ProductLine_ID = 5
                        },
                        new
                        {
                            ProductImage_ID = 30,
                            ProductImage_Image = "/Images/Product/5-5.jpg",
                            ProductLine_ID = 5
                        },
                        new
                        {
                            ProductImage_ID = 31,
                            ProductImage_Image = "/Images/Product/5-6.jpg",
                            ProductLine_ID = 5
                        },
                        new
                        {
                            ProductImage_ID = 32,
                            ProductImage_Image = "/Images/Product/5-7.jpg",
                            ProductLine_ID = 5
                        },
                        new
                        {
                            ProductImage_ID = 33,
                            ProductImage_Image = "/Images/Product/6-0.png",
                            ProductLine_ID = 6
                        },
                        new
                        {
                            ProductImage_ID = 34,
                            ProductImage_Image = "/Images/Product/6-1.png",
                            ProductLine_ID = 6
                        },
                        new
                        {
                            ProductImage_ID = 35,
                            ProductImage_Image = "/Images/Product/6-2.png",
                            ProductLine_ID = 6
                        },
                        new
                        {
                            ProductImage_ID = 36,
                            ProductImage_Image = "/Images/Product/6-3.png",
                            ProductLine_ID = 6
                        },
                        new
                        {
                            ProductImage_ID = 37,
                            ProductImage_Image = "/Images/Product/7-0.jpg",
                            ProductLine_ID = 7
                        },
                        new
                        {
                            ProductImage_ID = 38,
                            ProductImage_Image = "/Images/Product/7-1.jpg",
                            ProductLine_ID = 7
                        },
                        new
                        {
                            ProductImage_ID = 39,
                            ProductImage_Image = "/Images/Product/7-2.jpg",
                            ProductLine_ID = 7
                        },
                        new
                        {
                            ProductImage_ID = 40,
                            ProductImage_Image = "/Images/Product/7-3.jpg",
                            ProductLine_ID = 7
                        },
                        new
                        {
                            ProductImage_ID = 41,
                            ProductImage_Image = "/Images/Product/7-4.jpg",
                            ProductLine_ID = 7
                        },
                        new
                        {
                            ProductImage_ID = 42,
                            ProductImage_Image = "/Images/Product/7-5.jpg",
                            ProductLine_ID = 7
                        },
                        new
                        {
                            ProductImage_ID = 43,
                            ProductImage_Image = "/Images/Product/8-0.png",
                            ProductLine_ID = 8
                        },
                        new
                        {
                            ProductImage_ID = 44,
                            ProductImage_Image = "/Images/Product/8-1.png",
                            ProductLine_ID = 8
                        },
                        new
                        {
                            ProductImage_ID = 45,
                            ProductImage_Image = "/Images/Product/8-2.png",
                            ProductLine_ID = 8
                        },
                        new
                        {
                            ProductImage_ID = 46,
                            ProductImage_Image = "/Images/Product/8-3.png",
                            ProductLine_ID = 8
                        },
                        new
                        {
                            ProductImage_ID = 47,
                            ProductImage_Image = "/Images/Product/8-4.png",
                            ProductLine_ID = 8
                        },
                        new
                        {
                            ProductImage_ID = 48,
                            ProductImage_Image = "/Images/Product/8-5.png",
                            ProductLine_ID = 8
                        },
                        new
                        {
                            ProductImage_ID = 49,
                            ProductImage_Image = "/Images/Product/8-6.png",
                            ProductLine_ID = 8
                        },
                        new
                        {
                            ProductImage_ID = 50,
                            ProductImage_Image = "/Images/Product/8-7.png",
                            ProductLine_ID = 8
                        },
                        new
                        {
                            ProductImage_ID = 51,
                            ProductImage_Image = "/Images/Product/8-8.png",
                            ProductLine_ID = 8
                        },
                        new
                        {
                            ProductImage_ID = 52,
                            ProductImage_Image = "/Images/Product/8-9.png",
                            ProductLine_ID = 8
                        },
                        new
                        {
                            ProductImage_ID = 53,
                            ProductImage_Image = "/Images/Product/8-10.png",
                            ProductLine_ID = 8
                        },
                        new
                        {
                            ProductImage_ID = 54,
                            ProductImage_Image = "/Images/Product/9-0.png",
                            ProductLine_ID = 9
                        },
                        new
                        {
                            ProductImage_ID = 55,
                            ProductImage_Image = "/Images/Product/9-1.png",
                            ProductLine_ID = 9
                        },
                        new
                        {
                            ProductImage_ID = 56,
                            ProductImage_Image = "/Images/Product/9-2.png",
                            ProductLine_ID = 9
                        },
                        new
                        {
                            ProductImage_ID = 57,
                            ProductImage_Image = "/Images/Product/9-3.png",
                            ProductLine_ID = 9
                        },
                        new
                        {
                            ProductImage_ID = 58,
                            ProductImage_Image = "/Images/Product/9-4.png",
                            ProductLine_ID = 9
                        },
                        new
                        {
                            ProductImage_ID = 59,
                            ProductImage_Image = "/Images/Product/10-0.png",
                            ProductLine_ID = 10
                        },
                        new
                        {
                            ProductImage_ID = 60,
                            ProductImage_Image = "/Images/Product/10-1.png",
                            ProductLine_ID = 10
                        },
                        new
                        {
                            ProductImage_ID = 61,
                            ProductImage_Image = "/Images/Product/10-2.png",
                            ProductLine_ID = 10
                        },
                        new
                        {
                            ProductImage_ID = 62,
                            ProductImage_Image = "/Images/Product/10-3.png",
                            ProductLine_ID = 10
                        },
                        new
                        {
                            ProductImage_ID = 63,
                            ProductImage_Image = "/Images/Product/11-0.png",
                            ProductLine_ID = 11
                        },
                        new
                        {
                            ProductImage_ID = 64,
                            ProductImage_Image = "/Images/Product/11-1.jpg",
                            ProductLine_ID = 11
                        },
                        new
                        {
                            ProductImage_ID = 65,
                            ProductImage_Image = "/Images/Product/11-2.png",
                            ProductLine_ID = 11
                        },
                        new
                        {
                            ProductImage_ID = 66,
                            ProductImage_Image = "/Images/Product/11-3.png",
                            ProductLine_ID = 11
                        },
                        new
                        {
                            ProductImage_ID = 67,
                            ProductImage_Image = "/Images/Product/11-4.png",
                            ProductLine_ID = 11
                        },
                        new
                        {
                            ProductImage_ID = 68,
                            ProductImage_Image = "/Images/Product/12-0.png",
                            ProductLine_ID = 12
                        },
                        new
                        {
                            ProductImage_ID = 69,
                            ProductImage_Image = "/Images/Product/12-1.png",
                            ProductLine_ID = 12
                        },
                        new
                        {
                            ProductImage_ID = 70,
                            ProductImage_Image = "/Images/Product/12-2.png",
                            ProductLine_ID = 12
                        },
                        new
                        {
                            ProductImage_ID = 71,
                            ProductImage_Image = "/Images/Product/12-3.png",
                            ProductLine_ID = 12
                        },
                        new
                        {
                            ProductImage_ID = 72,
                            ProductImage_Image = "/Images/Product/12-4.png",
                            ProductLine_ID = 12
                        },
                        new
                        {
                            ProductImage_ID = 73,
                            ProductImage_Image = "/Images/Product/13-0.png",
                            ProductLine_ID = 13
                        },
                        new
                        {
                            ProductImage_ID = 74,
                            ProductImage_Image = "/Images/Product/13-1.png",
                            ProductLine_ID = 13
                        });
                });

            modelBuilder.Entity("Lulus.Data.Entities.ProductLine", b =>
                {
                    b.Property<int>("ProductLine_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ProductLine_CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProductLine_UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Product_ID")
                        .HasColumnType("int");

                    b.Property<string>("Texture_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Texture_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductLine_ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("ProductLines");

                    b.HasData(
                        new
                        {
                            ProductLine_ID = 1,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 294, DateTimeKind.Local).AddTicks(3576),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(8138),
                            Product_ID = 1,
                            Texture_Image = "/Images/Product/texture/navy-blue.png",
                            Texture_Name = "Navy Blue"
                        },
                        new
                        {
                            ProductLine_ID = 2,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9352),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9357),
                            Product_ID = 1,
                            Texture_Image = "/Images/Product/texture/green.png",
                            Texture_Name = "Green"
                        },
                        new
                        {
                            ProductLine_ID = 3,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9361),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9363),
                            Product_ID = 2,
                            Texture_Image = "/Images/Product/texture/mustard-yellow-floral-print.jpg",
                            Texture_Name = "Mustard Yellow Floral Print"
                        },
                        new
                        {
                            ProductLine_ID = 4,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9366),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9368),
                            Product_ID = 2,
                            Texture_Image = "/Images/Product/texture/red-floral-print.png",
                            Texture_Name = "Red Floral Print"
                        },
                        new
                        {
                            ProductLine_ID = 5,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9372),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9373),
                            Product_ID = 2,
                            Texture_Image = "/Images/Product/texture/navy-blue-floral-print.jpg",
                            Texture_Name = "Navy Blue Floral Print"
                        },
                        new
                        {
                            ProductLine_ID = 6,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9376),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9378),
                            Product_ID = 3,
                            Texture_Image = "/Images/Product/texture/red.png",
                            Texture_Name = "Red"
                        },
                        new
                        {
                            ProductLine_ID = 7,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9383),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9384),
                            Product_ID = 3,
                            Texture_Image = "/Images/Product/texture/white.png",
                            Texture_Name = "White"
                        },
                        new
                        {
                            ProductLine_ID = 8,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9388),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9390),
                            Product_ID = 4,
                            Texture_Image = "/Images/Product/texture/royal-white.jpg",
                            Texture_Name = "Royal White"
                        },
                        new
                        {
                            ProductLine_ID = 9,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9394),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9395),
                            Product_ID = 4,
                            Texture_Image = "/Images/Product/texture/royal-blue.jpg",
                            Texture_Name = "Royal Blue"
                        },
                        new
                        {
                            ProductLine_ID = 10,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9399),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9401),
                            Product_ID = 5,
                            Texture_Image = "/Images/Product/texture/burgundy.png",
                            Texture_Name = "Burgundy"
                        },
                        new
                        {
                            ProductLine_ID = 11,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9403),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9405),
                            Product_ID = 6,
                            Texture_Image = "/Images/Product/texture/purple.jpg",
                            Texture_Name = "Purple"
                        },
                        new
                        {
                            ProductLine_ID = 12,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9407),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9409),
                            Product_ID = 6,
                            Texture_Image = "/Images/Product/texture/burgundy.png",
                            Texture_Name = "Burgundy"
                        },
                        new
                        {
                            ProductLine_ID = 13,
                            ProductLine_CreatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9411),
                            ProductLine_UpdatedDate = new DateTime(2021, 10, 6, 16, 59, 1, 295, DateTimeKind.Local).AddTicks(9413),
                            Product_ID = 6,
                            Texture_Image = "/Images/Product/texture/green.png",
                            Texture_Name = "Green"
                        });
                });

            modelBuilder.Entity("Lulus.Data.Entities.Size", b =>
                {
                    b.Property<int>("Size_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Size_Key")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Size_ID");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Size_ID = 1,
                            Size_Key = "XXS"
                        },
                        new
                        {
                            Size_ID = 2,
                            Size_Key = "XS"
                        },
                        new
                        {
                            Size_ID = 3,
                            Size_Key = "S"
                        },
                        new
                        {
                            Size_ID = 4,
                            Size_Key = "M"
                        },
                        new
                        {
                            Size_ID = 5,
                            Size_Key = "L"
                        },
                        new
                        {
                            Size_ID = 6,
                            Size_Key = "XL"
                        },
                        new
                        {
                            Size_ID = 7,
                            Size_Key = "1X"
                        },
                        new
                        {
                            Size_ID = 8,
                            Size_Key = "2X"
                        },
                        new
                        {
                            Size_ID = 9,
                            Size_Key = "3X"
                        });
                });

            modelBuilder.Entity("Lulus.Data.Entities.SubCategory", b =>
                {
                    b.Property<int>("SubCategory_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("SubCategory_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCategory_ID");

                    b.HasIndex("Category_ID");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            SubCategory_ID = 1,
                            Category_ID = 1,
                            SubCategory_Name = "A-Line"
                        },
                        new
                        {
                            SubCategory_ID = 2,
                            Category_ID = 1,
                            SubCategory_Name = "Asymmetric"
                        },
                        new
                        {
                            SubCategory_ID = 3,
                            Category_ID = 1,
                            SubCategory_Name = "Bodycon"
                        },
                        new
                        {
                            SubCategory_ID = 4,
                            Category_ID = 1,
                            SubCategory_Name = "Column"
                        },
                        new
                        {
                            SubCategory_ID = 5,
                            Category_ID = 1,
                            SubCategory_Name = "Empire"
                        },
                        new
                        {
                            SubCategory_ID = 6,
                            Category_ID = 1,
                            SubCategory_Name = "Shift"
                        },
                        new
                        {
                            SubCategory_ID = 7,
                            Category_ID = 1,
                            SubCategory_Name = "Skater"
                        },
                        new
                        {
                            SubCategory_ID = 8,
                            Category_ID = 1,
                            SubCategory_Name = "Tiered"
                        },
                        new
                        {
                            SubCategory_ID = 9,
                            Category_ID = 1,
                            SubCategory_Name = "Trumpet"
                        },
                        new
                        {
                            SubCategory_ID = 10,
                            Category_ID = 1,
                            SubCategory_Name = "Tulip"
                        },
                        new
                        {
                            SubCategory_ID = 11,
                            Category_ID = 2,
                            SubCategory_Name = "Apron"
                        },
                        new
                        {
                            SubCategory_ID = 12,
                            Category_ID = 2,
                            SubCategory_Name = "Boat Neck"
                        },
                        new
                        {
                            SubCategory_ID = 13,
                            Category_ID = 2,
                            SubCategory_Name = "Collared"
                        },
                        new
                        {
                            SubCategory_ID = 14,
                            Category_ID = 2,
                            SubCategory_Name = "Convertible"
                        },
                        new
                        {
                            SubCategory_ID = 15,
                            Category_ID = 2,
                            SubCategory_Name = "Cowl"
                        },
                        new
                        {
                            SubCategory_ID = 16,
                            Category_ID = 3,
                            SubCategory_Name = "A-Line"
                        },
                        new
                        {
                            SubCategory_ID = 17,
                            Category_ID = 3,
                            SubCategory_Name = "Asymmetrical"
                        },
                        new
                        {
                            SubCategory_ID = 18,
                            Category_ID = 3,
                            SubCategory_Name = "Bodycon"
                        },
                        new
                        {
                            SubCategory_ID = 19,
                            Category_ID = 3,
                            SubCategory_Name = "Boyfriend"
                        },
                        new
                        {
                            SubCategory_ID = 20,
                            Category_ID = 3,
                            SubCategory_Name = "Cullote"
                        },
                        new
                        {
                            SubCategory_ID = 21,
                            Category_ID = 4,
                            SubCategory_Name = "Halter"
                        },
                        new
                        {
                            SubCategory_ID = 22,
                            Category_ID = 4,
                            SubCategory_Name = "High-Neck"
                        },
                        new
                        {
                            SubCategory_ID = 23,
                            Category_ID = 4,
                            SubCategory_Name = "One-Shoulder"
                        },
                        new
                        {
                            SubCategory_ID = 24,
                            Category_ID = 4,
                            SubCategory_Name = "Round-Neck"
                        },
                        new
                        {
                            SubCategory_ID = 25,
                            Category_ID = 4,
                            SubCategory_Name = "Scoop"
                        },
                        new
                        {
                            SubCategory_ID = 26,
                            Category_ID = 5,
                            SubCategory_Name = "Coverups"
                        },
                        new
                        {
                            SubCategory_ID = 27,
                            Category_ID = 5,
                            SubCategory_Name = "One Piece Swimsuits"
                        },
                        new
                        {
                            SubCategory_ID = 28,
                            Category_ID = 5,
                            SubCategory_Name = "Swimsuit Bottoms"
                        },
                        new
                        {
                            SubCategory_ID = 29,
                            Category_ID = 5,
                            SubCategory_Name = "Swimsuit Tops"
                        },
                        new
                        {
                            SubCategory_ID = 30,
                            Category_ID = 5,
                            SubCategory_Name = "Bandeau"
                        },
                        new
                        {
                            SubCategory_ID = 31,
                            Category_ID = 6,
                            SubCategory_Name = "Blazers"
                        },
                        new
                        {
                            SubCategory_ID = 32,
                            Category_ID = 6,
                            SubCategory_Name = "Coats"
                        },
                        new
                        {
                            SubCategory_ID = 33,
                            Category_ID = 6,
                            SubCategory_Name = "Denim Jackets"
                        },
                        new
                        {
                            SubCategory_ID = 34,
                            Category_ID = 6,
                            SubCategory_Name = "Jackets"
                        },
                        new
                        {
                            SubCategory_ID = 35,
                            Category_ID = 6,
                            SubCategory_Name = "Collared"
                        },
                        new
                        {
                            SubCategory_ID = 36,
                            Category_ID = 7,
                            SubCategory_Name = "Apron"
                        },
                        new
                        {
                            SubCategory_ID = 37,
                            Category_ID = 7,
                            SubCategory_Name = "Boat Neck"
                        },
                        new
                        {
                            SubCategory_ID = 38,
                            Category_ID = 7,
                            SubCategory_Name = "Collared"
                        },
                        new
                        {
                            SubCategory_ID = 39,
                            Category_ID = 7,
                            SubCategory_Name = "Halter"
                        },
                        new
                        {
                            SubCategory_ID = 40,
                            Category_ID = 7,
                            SubCategory_Name = "Mock"
                        },
                        new
                        {
                            SubCategory_ID = 41,
                            Category_ID = 8,
                            SubCategory_Name = "Boyfriend"
                        },
                        new
                        {
                            SubCategory_ID = 42,
                            Category_ID = 8,
                            SubCategory_Name = "Cut Off"
                        },
                        new
                        {
                            SubCategory_ID = 43,
                            Category_ID = 8,
                            SubCategory_Name = "Flare"
                        },
                        new
                        {
                            SubCategory_ID = 44,
                            Category_ID = 8,
                            SubCategory_Name = "Mom"
                        },
                        new
                        {
                            SubCategory_ID = 45,
                            Category_ID = 8,
                            SubCategory_Name = "Skinny"
                        },
                        new
                        {
                            SubCategory_ID = 46,
                            Category_ID = 9,
                            SubCategory_Name = "Boat Neck"
                        },
                        new
                        {
                            SubCategory_ID = 47,
                            Category_ID = 9,
                            SubCategory_Name = "Collared"
                        },
                        new
                        {
                            SubCategory_ID = 48,
                            Category_ID = 9,
                            SubCategory_Name = "High-Neck"
                        },
                        new
                        {
                            SubCategory_ID = 49,
                            Category_ID = 9,
                            SubCategory_Name = "Mock"
                        },
                        new
                        {
                            SubCategory_ID = 50,
                            Category_ID = 9,
                            SubCategory_Name = "Scoop"
                        });
                });

            modelBuilder.Entity("Lulus.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61ae2038-97f2-45e5-91ae-08d961fa9be8"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "78f0b2b7-2c3e-435e-87f3-2996d48e26b1",
                            Customer_Address = "22 St. Wall Street, Brooklyn, American",
                            Customer_FirstName = "Anna",
                            Customer_LastName = "Lee",
                            Email = "annalee@shop.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANNALEE@SHOP.COM",
                            NormalizedUserName = "ANNALEE",
                            PasswordHash = "AQAAAAEAACcQAAAAEIUb0BT1JB2uuZpn2k3W78X5+f7XMEhHvSwkWc9V6ISnSyzLjwUVQQJlsW88YcfJyg==",
                            PhoneNumber = "012545454541",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "NQLC7NG4A7DTOJ5DETPA35OHKTOZMMYP",
                            TwoFactorEnabled = false,
                            UserName = "annalee"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ConcurrencyStamp = "9f9523e0-1974-4226-81bc-9393c13e806a",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("54ba416f-6b89-4c53-873d-4fbd48506e6d"),
                            ConcurrencyStamp = "7a07a9b2-a7e2-43e3-82d0-215176e2db70",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("61ae2038-97f2-45e5-91ae-08d961fa9be8"),
                            RoleId = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Feedback", b =>
                {
                    b.HasOne("Lulus.Data.Entities.Product", "Product")
                        .WithMany("Feedbacks")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lulus.Data.Entities.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lulus.Data.Entities.LineQuantity", b =>
                {
                    b.HasOne("Lulus.Data.Entities.ProductLine", "ProductLine")
                        .WithMany("LineQuantities")
                        .HasForeignKey("ProductLine_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lulus.Data.Entities.Size", "Size")
                        .WithMany("LineQuantities")
                        .HasForeignKey("Size_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductLine");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Order", b =>
                {
                    b.HasOne("Lulus.Data.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lulus.Data.Entities.OrderDetail", b =>
                {
                    b.HasOne("Lulus.Data.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("Order_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lulus.Data.Entities.ProductLine", "ProductLine")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductLine_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProductLine");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Product", b =>
                {
                    b.HasOne("Lulus.Data.Entities.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategory_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Lulus.Data.Entities.ProductImage", b =>
                {
                    b.HasOne("Lulus.Data.Entities.ProductLine", "ProductLine")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductLine_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductLine");
                });

            modelBuilder.Entity("Lulus.Data.Entities.ProductLine", b =>
                {
                    b.HasOne("Lulus.Data.Entities.Product", "Product")
                        .WithMany("ProductLines")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Lulus.Data.Entities.SubCategory", b =>
                {
                    b.HasOne("Lulus.Data.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Lulus.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Lulus.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lulus.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Lulus.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Lulus.Data.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Product", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("ProductLines");
                });

            modelBuilder.Entity("Lulus.Data.Entities.ProductLine", b =>
                {
                    b.Navigation("LineQuantities");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Lulus.Data.Entities.Size", b =>
                {
                    b.Navigation("LineQuantities");
                });

            modelBuilder.Entity("Lulus.Data.Entities.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Lulus.Data.Entities.User", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
